% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basic.treePlot2.R
\name{basic.treePlot2}
\alias{basic.treePlot2}
\title{Rboretum Basic Tree Plotter}
\usage{
myPlot <- treePlotter(tree=myTree,...)
}
\arguments{
\item{tree}{Phylo object}

\item{branch_length}{OPTIONAL: TRUE [plot tree with branch lengths]; FALSE [Default: plot cladogram]}

\item{branch_weight}{OPTIONAL: Set ggtree branch thickness}

\item{node_label}{OPTIONAL: Node label choices include:
\itemize{
  \item "none": No node labels
  \item "node": Node number
  \item "bs": Bootstrap value [Default]
}}

\item{node_size}{OPTIONAL: Set ggtree node label size}

\item{node_nudge}{OPTIONAL: Set ggtree node label nudge_x}

\item{taxa_size}{OPTIONAL: Set ggtree tip label size}

\item{taxa_italic}{OPTIONAL: TRUE [italic tip labels]; FALSE [Default: non-italic tip labels]}

\item{taxa_align}{OPTIONAL: 'left' or 'right' tip label alignment [Default: No alignment]}

\item{taxa_offset}{OPTIONAL: Set ggtree tip label offset}

\item{xmax}{OPTIONAL: Set ggplot xlim upper limit (e.g if long tip labels run off plot)}

\item{reverse_x}{OPTIONAL: TRUE [plot tree with tips on left]; FALSE [Default: plot tree with tips on right]}

\item{rename_tips}{OPTIONAL: Dataframe where column 1 contains tip labels for tree, and column 2 contains new, desired tip labels}

\item{to_color}{OPTIONAL: Color tips or clades via:
\itemize{
  \item Character vector of taxa, all to be colored the same color
  \item List of groups of taxa, each of which will have their own color. List can be named for use with a legend (set color_legend == TRUE)
}}

\item{color_legend}{TRUE [Include a legend for colored taxa/clades]; False [Default: No legend]}
}
\value{
ggtree object
}
\description{
Given a phylo object (tree), this ggtree wrapper returns a ggtree plot object, adjusted with possible arguments
}
\examples{
# Print tree with bootstrap labels
basic.treePlot(tree)

# Print tree with no node labels
basic.treePlot(tree,node_label='none')

# Print tree with thicker branches
basic.treePlot(tree,branch_weight=3)

# Print tree with buffer on right side to accomodate longer tip labels
basic.treePlot(tree,xmax=10)
}
